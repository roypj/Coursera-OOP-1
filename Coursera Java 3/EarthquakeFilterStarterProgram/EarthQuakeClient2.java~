import java.util.*;
import edu.duke.*;

public class EarthQuakeClient2 {
    public EarthQuakeClient2() {
        // TODO Auto-generated constructor stub
    }

    public ArrayList<QuakeEntry> filter(ArrayList<QuakeEntry> quakeData, Filter f) { 
        ArrayList<QuakeEntry> answer = new ArrayList<QuakeEntry>();
        for(QuakeEntry qe : quakeData) { 
            if (f.satisfies(qe)) { 
                answer.add(qe); 
            } 
        } 
        return answer;
    } 

    public void quakesWithFilter() { 
        EarthQuakeParser parser = new EarthQuakeParser(); 
        //String source = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.atom";
        String source = "data/nov20quakedata.atom";
        ArrayList<QuakeEntry> list  = parser.read(source);         
        System.out.println("read data for "+list.size()+" quakes");
        //Filter f = new MinMagFilter(4.0); 
        //Filter f = new MagnitudeFilter(4.0,5.0);
        //Filter f = new DepthFilter(-10000,-5000);
        //Location tokyo  = new Location(35.42,139.43);
        //Filter f = new DistanceFilter(tokyo,10000*1000);
        //Filter f = new PhraseFilter("end","California");
        //ArrayList<QuakeEntry> m7  = filter(list, f); 
        //Filter f1 = new PhraseFilter("end","Japan");
        MatchAllFilter maf = new MatchAllFilter();
        Filter mag = new MagnitudeFilter(0.0,2.0,"Magnitude");
        maf.addFilter(mag);
        Filter dep = new DepthFilter(-100000,-10000,"Depth");
        maf.addFilter(dep);
        //Location bilund = new Location(35.42, 139.43);
        //Filter dist = new DistanceFilter(bilund,10000000,"Distance");
        //maf.addFilter(dist);
        Filter phr = new PhraseFilter("any","a","Phrase");
        maf.addFilter(phr);
        ArrayList<QuakeEntry> m8  = filter(list, maf);
        System.out.println("The number of quakes with the criteria are :"+m8.size());
//         for (QuakeEntry qe: m8) { 
//             System.out.println(qe);
//         } 
        System.out.println("Filters used are : "+maf.getName());
    }

    public void createCSV() {
        EarthQuakeParser parser = new EarthQuakeParser();
        //String source = "../data/nov20quakedata.atom";
        String source = "data/nov20quakedatasmall.atom";
        //String source = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.atom";
        ArrayList<QuakeEntry> list  = parser.read(source);
        dumpCSV(list);
        System.out.println("# quakes read: "+list.size());
    }

    public void dumpCSV(ArrayList<QuakeEntry> list) {
        System.out.println("Latitude,Longitude,Magnitude,Info");
        for(QuakeEntry qe : list){
            System.out.printf("%4.2f,%4.2f,%4.2f,%s\n",
                qe.getLocation().getLatitude(),
                qe.getLocation().getLongitude(),
                qe.getMagnitude(),
                qe.getInfo());
        }
    }

}
